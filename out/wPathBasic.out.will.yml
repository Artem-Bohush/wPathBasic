format: outwillfile-2.0
root:
  - wPathBasic.out
consistency:
  ../.ex.will.yml: &ref_0
    hash: bb6857d60286fb340be21a2bbc6595a1
    size: 1971
  ../.im.will.yml: &ref_1
    hash: 844ab52058e80d039128df770afd6bfa
    size: 1692
module:
  wPathBasic.out:
    about:
      name: wPathBasic
      description: >-
        Collection of routines to operate paths reliably and consistently.
        PathBasic leverages parsing, joining, extracting, normalizing,
        nativizing, resolving paths. Use the module to get uniform experience
        from playing with paths on different platforms.
      enabled: 1
      version: 0.8.0
      interpreters: &ref_2
        - njs >= 8.0.0
        - chrome >= 60.0.0
        - firefox >= 60.0.0
      keywords: &ref_3
        - wTools
        - wPath
        - wPathTools
        - path
        - url
        - uri
        - file
      license: MIT
      author: Kostiantyn Wandalen <wanalen@willbe.so>
      contributors: &ref_4
        - Kostiantyn Wandalen <wanalen@willbe.so>
        - Volodymyr M. <volodymyr.migdal@gmail.com>
        - Dmytro Kryvoruchko <dm.vict.kr@gmail.com>
      npm.name: wpathbasic
      npm.scripts: &ref_5
        test: wtest .run proto/**
        docgen: wdocgen .build proto
    path:
      module.common:
        criterion:
          predefined: 1
        path: wPathBasic.out
      module.willfiles:
        criterion:
          predefined: 1
        path: wPathBasic.out.will.yml
      module.download:
        criterion:
          predefined: 1
      remote:
        criterion:
          predefined: 1
      module.original.willfiles:
        criterion:
          predefined: 1
        path:
          - ../.ex.will.yml
          - ../.im.will.yml
      module.peer.willfiles:
        criterion:
          predefined: 1
        path:
          - ../.ex.will.yml
          - ../.im.will.yml
      repository:
        path: 'git+https:///github.com/Wandalen/wPathBasic.git'
      bugtracker:
        path: 'https:///github.com/Wandalen/wPathBasic/issues'
      in:
        criterion:
          predefined: 0
        path: .
      temp:
        path: .
      out:
        criterion:
          predefined: 0
        path: .
      out.debug:
        criterion:
          debug: 1
        path: debug
      out.release:
        criterion:
          debug: 0
        path: release
      proto:
        path: ../proto
      export:
        path: '{path::proto}/**'
      exported.dir.export:
        criterion:
          default: 1
          export: 1
        path: ../proto
      exported.files.export:
        criterion:
          default: 1
          export: 1
        path:
          - ../proto
          - ../proto/dwtools
          - ../proto/dwtools/Tools.s
          - ../proto/dwtools/abase
          - ../proto/dwtools/abase/l3
          - ../proto/dwtools/abase/l3/PathBasic.s
          - ../proto/dwtools/abase/l3.test
          - ../proto/dwtools/abase/l3.test/PathBasic.test.html
          - ../proto/dwtools/abase/l3.test/PathBasic.test.s
          - ../proto/dwtools/abase/l4
          - ../proto/dwtools/abase/l4/PathsBasic.s
          - ../proto/dwtools/abase/l4.test
          - ../proto/dwtools/abase/l4.test/Paths.test.s
          - ../proto/dwtools/amid
          - ../proto/dwtools/atop
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
          prefixPath: ''
        dst:
          prefixPath: ''
        mandatory: 1
        criterion:
          debug: 0
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
          prefixPath: ''
        dst:
          prefixPath: ''
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
          prefixPath: ''
        dst:
          prefixPath: ''
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      exported.export:
        src:
          filePath:
            '**': ''
          prefixPath: ../proto
        mandatory: 1
        criterion:
          default: 1
          export: 1
      exported.files.export:
        src:
          filePath:
            'path::exported.files.export': ''
          basePath: .
          prefixPath: 'path::exported.dir.export'
          recursive: 0
        recursive: 0
        mandatory: 1
        criterion:
          default: 1
          export: 1
    step:
      proto.export:
        opts:
          export: 'path::export'
          tar: 0
        criterion:
          content: proto
        inherit:
          - module.export
      doc.export:
        opts:
          export: 'path::doc'
          tar: 0
        criterion:
          content: doc
        inherit:
          - module.export
      npm.export:
        opts:
          export: out.npm
          tar: 0
        criterion:
          content: npm
        inherit:
          - module.export
      npm.publish:
        opts:
          shell: npm publish
      clean.out.:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 0
        inherit:
          - files.delete
      clean.out.debug:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 1
        inherit:
          - files.delete
      reflect.proto.:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.debug:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules.:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.submodules.raw:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules:
        opts:
          reflector: 'reflector::reflect.submodules*'
        criterion:
          debug: 1
        inherit:
          - files.reflect
    build:
      proto.export:
        steps:
          - 'step::proto.export'
        criterion:
          content: proto
          export: 1
      doc.export:
        steps:
          - 'step::doc.export'
        criterion:
          content: doc
          export: 1
      npm.export:
        steps:
          - 'step::npm.publish'
        criterion:
          content: npm
          export: 1
      export:
        steps:
          - 'build::proto.export'
        criterion:
          default: 1
          export: 1
      debug.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          default: 1
          debug: 1
          raw: 1
      debug.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
      release.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
      release.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
    exported:
      export:
        version: 0.8.0
        recursive: 0
        withIntegrated: 2
        tar: 0
        exportedReflector: 'reflector::exported.export'
        exportedFilesReflector: 'reflector::exported.files.export'
        exportedDirPath: 'path::exported.dir.export'
        exportedFilesPath: 'path::exported.files.export'
        criterion:
          default: 1
          export: 1
    consistency:
      ../.ex.will.yml: *ref_0
      ../.im.will.yml: *ref_1
  ../:
    about:
      name: wPathBasic
      description: >-
        Collection of routines to operate paths reliably and consistently.
        PathBasic leverages parsing, joining, extracting, normalizing,
        nativizing, resolving paths. Use the module to get uniform experience
        from playing with paths on different platforms.
      enabled: 1
      version: 0.8.0
      interpreters: *ref_2
      keywords: *ref_3
      license: MIT
      author: Kostiantyn Wandalen <wanalen@willbe.so>
      contributors: *ref_4
      npm.name: wpathbasic
      npm.scripts: *ref_5
    path:
      module.download:
        criterion:
          predefined: 1
      remote:
        criterion:
          predefined: 1
      module.common:
        criterion:
          predefined: 1
        path: ./
      module.original.willfiles:
        criterion:
          predefined: 1
        path:
          - .ex.will.yml
          - .im.will.yml
      module.peer.willfiles:
        criterion:
          predefined: 1
        path: out/wPathBasic.out.will.yml
      module.willfiles:
        criterion:
          predefined: 1
        path:
          - .ex.will.yml
          - .im.will.yml
      repository:
        path: 'git+https:///github.com/Wandalen/wPathBasic.git'
      bugtracker:
        path: 'https:///github.com/Wandalen/wPathBasic/issues'
      in:
        criterion:
          predefined: 0
        path: .
      temp:
        path: out
      out:
        criterion:
          predefined: 0
        path: out
      out.debug:
        criterion:
          debug: 1
        path: ./out/debug
      out.release:
        criterion:
          debug: 0
        path: ./out/release
      proto:
        path: ./proto
      export:
        path: '{path::proto}/**'
      exported.dir.export:
        criterion:
          default: 1
          export: 1
        path: ./proto
      exported.files.export:
        criterion:
          default: 1
          export: 1
        path:
          - proto
          - proto/dwtools
          - proto/dwtools/Tools.s
          - proto/dwtools/abase
          - proto/dwtools/abase/l3
          - proto/dwtools/abase/l3/PathBasic.s
          - proto/dwtools/abase/l3.test
          - proto/dwtools/abase/l3.test/PathBasic.test.html
          - proto/dwtools/abase/l3.test/PathBasic.test.s
          - proto/dwtools/abase/l4
          - proto/dwtools/abase/l4/PathsBasic.s
          - proto/dwtools/abase/l4.test
          - proto/dwtools/abase/l4.test/Paths.test.s
          - proto/dwtools/amid
          - proto/dwtools/atop
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 0
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      exported.export:
        src:
          filePath:
            '**': ''
          prefixPath: proto
        mandatory: 1
        criterion:
          default: 1
          export: 1
      exported.files.export:
        src:
          filePath:
            'path::exported.files.export': ''
          basePath: .
          prefixPath: 'path::exported.dir.export'
          recursive: 0
        recursive: 0
        mandatory: 1
        criterion:
          default: 1
          export: 1
    step:
      proto.export:
        opts:
          export: 'path::export'
          tar: 0
        criterion:
          content: proto
        inherit:
          - module.export
      doc.export:
        opts:
          export: 'path::doc'
          tar: 0
        criterion:
          content: doc
        inherit:
          - module.export
      npm.export:
        opts:
          export: out.npm
          tar: 0
        criterion:
          content: npm
        inherit:
          - module.export
      npm.publish:
        opts:
          shell: npm publish
      clean.out.:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 0
        inherit:
          - files.delete
      clean.out.debug:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 1
        inherit:
          - files.delete
      reflect.proto.:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.debug:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules.:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.submodules.raw:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules:
        opts:
          reflector: 'reflector::reflect.submodules*'
        criterion:
          debug: 1
        inherit:
          - files.reflect
    build:
      proto.export:
        steps:
          - 'step::proto.export'
        criterion:
          content: proto
          export: 1
      doc.export:
        steps:
          - 'step::doc.export'
        criterion:
          content: doc
          export: 1
      npm.export:
        steps:
          - 'step::npm.publish'
        criterion:
          content: npm
          export: 1
      export:
        steps:
          - 'build::proto.export'
        criterion:
          default: 1
          export: 1
      debug.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          default: 1
          debug: 1
          raw: 1
      debug.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
      release.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
      release.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
    exported:
      export:
        version: 0.8.0
        recursive: 0
        withIntegrated: 2
        tar: 0
        exportedReflector: 'reflector::exported.export'
        exportedFilesReflector: 'reflector::exported.files.export'
        exportedDirPath: 'path::exported.dir.export'
        exportedFilesPath: 'path::exported.files.export'
        criterion:
          default: 1
          export: 1
    consistency:
      ../.ex.will.yml:
        hash: bb6857d60286fb340be21a2bbc6595a1
        size: 1971
      ../.im.will.yml:
        hash: 844ab52058e80d039128df770afd6bfa
        size: 1692
